version: '3'

services:
  flask_portal:
    image: flask_portal
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 5000:5000
    networks:
      - frontend
      - backend
    volumes:
      - ../:/home/vscode/flask:cached
    command: sleep infinity

  neo4j:
    container_name: neo4j
    image: neo4j:latest
    volumes:
      - ../neo4j/data:/data
      - ../neo4j/logs:/logs
    ports:
      - "7474:7474"
      - "7687:7687"
      - "7473:7473"
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4JLABS_PLUGINS=["graph-data-science", "apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_security_procedures_whitelist=gds.*, apoc.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=neo4j/test
    networks:
      - frontend
      - backend
    restart: unless-stopped

mongodb:
    container_name: mongodb
    image: mongo:latest
    volumes:
      - ../mongodb-data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD= example
      - MONGO_INITDB_DATABASE= portal
    networks:
      - frontend
      - backend
    restart: unless-stopped

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge  
